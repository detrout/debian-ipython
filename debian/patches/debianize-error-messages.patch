From: Julian Taylor <jtaylor.debian@googlemail.com>
Date: Thu, 7 Jul 2011 18:19:04 +0200
Subject: debianize error messages


--- a/IPython/config/application.py
+++ b/IPython/config/application.py
@@ -558,9 +558,19 @@ class Application(SingletonConfigurable)
         
         If a global instance already exists, this reinitializes and starts it
         """
-        app = cls.instance(**kwargs)
-        app.initialize(argv)
-        app.start()
+        try:
+            app = cls.instance(**kwargs)
+            app.initialize(argv)
+            app.start()
+        except ImportError as e:
+            from IPython.utils import py3compat
+            ipy = "ipython3" if py3compat.PY3 else "ipython"
+            if "IPython.qt" in str(e) or "qt.console.qtconsoleapp" in str(e):
+                print("Could not start qtconsole. Please install %s-qtconsole" % ipy)
+            elif "IPython.html" in str(e) or "html.notebookapp" in str(e):
+                print("Could not start notebook. Please install %s-notebook" % ipy)
+            else:
+                raise
 
 #-----------------------------------------------------------------------------
 # utility functions, for convenience
--- a/IPython/lib/clipboard.py
+++ b/IPython/lib/clipboard.py
@@ -57,7 +57,7 @@ def tkinter_clipboard_get():
             from Tkinter import Tk, TclError  # Py 2
         except ImportError:
             raise TryNext("Getting text from the clipboard on this platform "
-                          "requires Tkinter.")
+                          "requires the %s-tk package." % ("python3" if py3compat.PY3 else "python"))
     root = Tk()
     root.withdraw()
     try:
--- a/IPython/utils/zmqrelated.py
+++ b/IPython/utils/zmqrelated.py
@@ -34,13 +34,13 @@ def check_for_zmq(minimum_version, requi
     try:
         import zmq
     except ImportError:
-        raise ImportError("%s requires pyzmq >= %s"%(required_by, minimum_version))
+        raise ImportError("%s requires python-zmq >= %s"%(required_by, minimum_version))
     
     patch_pyzmq()
     
     pyzmq_version = zmq.__version__
     
     if not check_version(pyzmq_version, minimum_version):
-        raise ImportError("%s requires pyzmq >= %s, but you have %s"%(
+        raise ImportError("%s requires python-zmq >= %s, but you have %s"%(
                         required_by, minimum_version, pyzmq_version))
 
